<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recommendation System on Robust dev O</title>
    <link>https://osmin625.github.io/categories/Recommendation-System/</link>
    <description>Recent content in Recommendation System on Robust dev O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 27 Sep 2023 13:53:00 +0900</lastBuildDate>
    <atom:link href="https://osmin625.github.io/categories/Recommendation-System/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>추천 시스템 개요</title>
      <link>https://osmin625.github.io/posts/Recsys-Overview/</link>
      <pubDate>Wed, 27 Sep 2023 13:53:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/Recsys-Overview/</guid>
      <description>Naver BoostCamp AI Tech에서 학습한 내용을 재구성했습니다.&#xA;해당 게시글은 지속적으로 업데이트할 예정입니다.&#xA;노션에 정리했던 내용을 복습하며 블로그에 조금씩 업로드하고 있습니다.&#xA;추천 시스템 추천 시스템 평가 패러다임 Rule Base 인기도 기반 추천&#xA;연관 분석(Association Analysis)&#xA;CBF: Content Based Filtering 1. Vectorizer — 아이템 특성을 벡터 형태로 어떻게 표현하는가 TF-IDF&#xA;TF-IDF 기반 추천&#xA;BM25&#xA;Word2Vec&#xA;2. Similarity — 특성화된 아이템이 서로 얼마나 비슷한가 Similarity&#xA;Distance&#xA;CF: Collaborative Filtering(협업 필터링) NBCF: Neighborhood-based CF(이웃 기반 협업 필터링) MBCF: Model based Collaborative Filtering(모델 기반 협업 필터링) ML based CF</description>
    </item>
    <item>
      <title>인기도 기반 추천이란?</title>
      <link>https://osmin625.github.io/posts/%EC%9D%B8%EA%B8%B0%EB%8F%84-%EA%B8%B0%EB%B0%98-%EC%B6%94%EC%B2%9C/</link>
      <pubDate>Tue, 11 Apr 2023 23:44:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/%EC%9D%B8%EA%B8%B0%EB%8F%84-%EA%B8%B0%EB%B0%98-%EC%B6%94%EC%B2%9C/</guid>
      <description>간단 요약&#xA;가장 인기있는 아이템을 규칙을 기반으로 추천한다.&#xA;인기도의 척도&#xA;- 조회수, 평균 평점, 리뷰 개수, 좋아요/싫어요 수&#xA;예시 네이버 쇼핑 랭킹 순 다음 뉴스, 댓글 추천 레딧 Hot 추천 Score 계산 방법 Most Popular: 조회수가 가장 많은 아이템 최신성을 고려하지 않으면 한번 조회수가 높은 아이템이 계속 추천되게 된다.&#xA;Score Formula&#xA;가장 많이 조회된 뉴스를 추천하기&#xA;좋아요가 가장 많은 게시글을 추천하기&#xA;Hacker News Formula&#xA;뉴스 추천 서비스&#xA;$$&#xD;score = \frac{pageviews -1}{(age + 2)^{gravity}}&#xD;$$</description>
    </item>
    <item>
      <title>DeepFM</title>
      <link>https://osmin625.github.io/posts/DeepFM/</link>
      <pubDate>Tue, 04 Apr 2023 17:38:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/DeepFM/</guid>
      <description>DeepFM: A Factorization-Machine based Neural Network for CTR Prediction&#xA;Wide &amp;amp; Deep 모델과 달리 두 요소(wide, deep)가 입력값을 공유하도록 한 end-to-end 방식의 논문&#xA;Background 추천 시스템에서는 implicit feature interaction을 학습하는 것이 중요하다.&#xA;예시) 식사 시간에 배달앱 다운로드 수 증가 (order-2 interaction)&#xA;10대 남성은 슈팅/RPG게임을 선호 (order-3 interaction)&#xA;기존 모델들은 low-나 high-order interaction 중 어느 한 쪽에만 강하다.&#xA;Wide &amp;amp; Deep 모델은 이 둘을 통합하여 문제 해결&#xA;하지만 wide component에 feature engineering(=Cross-Product Transformation)이 필요하다.</description>
    </item>
    <item>
      <title>WDN: Wide &amp; Deep Network</title>
      <link>https://osmin625.github.io/posts/WDN-Wide-Deep-Network/</link>
      <pubDate>Tue, 04 Apr 2023 17:38:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/WDN-Wide-Deep-Network/</guid>
      <description>Wide &amp;amp; Deep Learning for Recommender Systems&#xA;선형적인 모델(Wide)과 비선형적인 모델(Deep)을 결합하여 기존 모델들의 장점을 모두 취하고자 한 논문&#xA;등장 배경 추천시스템에서 해결해야 할 두 가지 과제&#xA;Memorization — 학습데이터에 자주 등장하는 패턴은 모델이 암기해야 한다.&#xA;함께 빈번히 등장하는 아이템 혹은 특성(feature) 관계를 과거 데이터로부터 학습하는 것&#xA;Logistic Regression과 같은 선형 모델&#xA;대규모 추천 시스템 및 검색 엔진에서 사용해왔다. 확장 및 해석이 용이하다. 학습 데이터에 없는 feature 조합에 취약하다. Generalization — 학습데이터에 발생하지 않는 패턴을 적절하게 표현해야 한다.</description>
    </item>
    <item>
      <title>FFM: Field-aware Factorization Machine</title>
      <link>https://osmin625.github.io/posts/FFM-Field-aware-Factorization-Machine/</link>
      <pubDate>Mon, 03 Apr 2023 14:17:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/FFM-Field-aware-Factorization-Machine/</guid>
      <description>개요 Field-aware Factorization Machines for CTR Prediction&#xA;FM의 변형된 모델인 FFM을 제안하여 더 높은 성능을 보인 논문 FM은 예측 문제에 두루 적용 가능한 모델로, 특히 sparse 데이터로 구성된 CTR 예측에서 좋은 성능을 보인다.&#xA;Field-aware Factorization Machine (FFM) FM을 발전시킨 모델&#xA;PITF 모델에서 아이디어를 얻었다.&#xA;PITF : Pairwise Interaction Tensor Factorization MF를 3차원으로 확장시킨 모델&#xA;PITF에서는 (user, item, tag) 3개의 필드에 대한 클릭률을 예측하기 위해&#xA;(user, item), (item, tag), (user, tag) 각각에 대해서 서로 다른 latent factor를 정의하여 계산</description>
    </item>
    <item>
      <title>FM: Factorization Machine</title>
      <link>https://osmin625.github.io/posts/FM-Factorization-Machine/</link>
      <pubDate>Mon, 03 Apr 2023 02:17:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/FM-Factorization-Machine/</guid>
      <description>General Predictor에 Latent Factor Model을 추가한 모델.&#xA;Background Factorization Machines&#xA;SVM과 Factorization Model의 장점을 결합한 FM을 처음 소개한 논문&#xA;등장 배경&#xA;딥러닝이 등장하기 이전 SVM이 가장 많이 사용됐다.&#xA;매우 희소한 데이터가 많은 CF 환경에서는 SVM보다 MF 계열의 모델이 더 높은 성능을 내왔다.&#xA;SVM과 MF의 장점을 결합할 수 없을까? ⇒ FM 탄생.&#xA;MF 기반 모델의 한계 ⇒ User-Item 행렬 기반&#xA;즉, 특정 데이터 포맷에 특화되어 있다.&#xA;$X:$ (유저, 아이템) → $Y:$ (rating)으로 이루어진 데이터에 대해서만 적용이 가능하다.</description>
    </item>
    <item>
      <title>MF: Matrix Factorization</title>
      <link>https://osmin625.github.io/posts/MF-Matrix-Factorization/</link>
      <pubDate>Thu, 30 Mar 2023 12:19:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/MF-Matrix-Factorization/</guid>
      <description>간단 요약&#xA;행렬을 인수분해 후 재생성하여 결측치를 예측하는 방법&#xA;인수분해를 다양하게 시도하여 대상 행렬을 가장 잘 복구하는 최적의 하위행렬을 찾는 과정 {: .prompt-info } Latent Factors, Matrix Factorization, SGD&#xA;행렬을 인수분해 후 재생성하여 결측치를 예측하는 방법&#xA;대상 행렬을 두개의 하위 행렬로 분해한다.&#xA;User-Item 행렬을 User와 Item 각각에 대한 저차원의 latent factor 행렬로 분해한다.&#xA;두 하위 행렬을 다시 곱해서 대상 행렬과 동일한 크기의 단일 행렬로 만든다.&#xA;위의 과정에서 기존 행렬의 빈공간이 채워진다.</description>
    </item>
    <item>
      <title>추천 시스템 평가 패러다임</title>
      <link>https://osmin625.github.io/posts/%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C/</link>
      <pubDate>Mon, 27 Mar 2023 11:15:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C/</guid>
      <description>MAP, NDCG&#xA;비즈니스 / 서비스 관점&#xA;추천 시스템 적용으로 인해 매출, PV(Page View) 증가&#xA;추천 아이템으로 인해 유저 CTR(노출 대비 클릭)의 상승&#xA;품질 관점&#xA;정확성(Accuracy)&#xA;연관성(Relevance): 추천된 아이템이 유저에게 관련이 있는가?&#xA;다양성(Diversity): 추천된 Top-K 아이템에 얼마나 다양한 아이템이 추천되는가?&#xA;신뢰성(Confidence) : 추천 결과를 제공하는 시스템이 신뢰할 만한가?&#xA;표준편차가 적은 추천 시스템일수록 더 높은 Confidence를 가진다.&#xA;신뢰성(Trust) : 사용자가 추천 결과에 얼마나 믿음을 가지는가?&#xA;추천 결과에 설명이 추가된다면 사용자가 추천 결과를 더 믿게 된다.</description>
    </item>
    <item>
      <title>추천 시스템이란?</title>
      <link>https://osmin625.github.io/posts/%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C/</link>
      <pubDate>Mon, 27 Mar 2023 10:36:00 +0900</pubDate>
      <guid>https://osmin625.github.io/posts/%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C/</guid>
      <description>정보 필터링(IF) 기술의 일종. 특정 사용자가 관심 가질 만한 정보를 추천하는 것. Background 기존&#xA;유저가 원하는 것을 검색하여 이에 맞는 아이템 결과를 보여주는 Pull 방식&#xA;추천 시스템&#xA;유저가 원하는 것을 유추하여 제시하는 Push 방식&#xA;유저가 자신의 니즈를 쿼리로 표현하지 않아도 된다.&#xA;다양한 종류의 아이템들을 유저에게 노출시킬 수 있다.&#xA;추천 시스템의 필요성&#xA;과거에는 유저가 접할 수 있는 상품, 컨텐츠가 제한적&#xA;TV 채널, 영화관, 백화점, 신문 등&#xA;웹/모바일 환경에 의해 다양한 상품, 컨텐츠 등장 → 정보 과다.</description>
    </item>
  </channel>
</rss>
